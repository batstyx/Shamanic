//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shamanic.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.0.3.0")]
    public sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Card")]
        public global::Shamanic.DisplayMode OverloadTotalCounterDisplay {
            get {
                return ((global::Shamanic.DisplayMode)(this["OverloadTotalCounterDisplay"]));
            }
            set {
                this["OverloadTotalCounterDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Card")]
        public global::Shamanic.DisplayMode TotemsPlayedCounterDisplay {
            get {
                return ((global::Shamanic.DisplayMode)(this["TotemsPlayedCounterDisplay"]));
            }
            set {
                this["TotemsPlayedCounterDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Never")]
        public global::Shamanic.DisplayMode OpponentCountersDisplay {
            get {
                return ((global::Shamanic.DisplayMode)(this["OpponentCountersDisplay"]));
            }
            set {
                this["OpponentCountersDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("82")]
        public int PlayerLeft {
            get {
                return ((int)(this["PlayerLeft"]));
            }
            set {
                this["PlayerLeft"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("76")]
        public int PlayerTop {
            get {
                return ((int)(this["PlayerTop"]));
            }
            set {
                this["PlayerTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("82")]
        public int OpponentLeft {
            get {
                return ((int)(this["OpponentLeft"]));
            }
            set {
                this["OpponentLeft"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("10")]
        public int OpponentTop {
            get {
                return ((int)(this["OpponentTop"]));
            }
            set {
                this["OpponentTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("8")]
        public int MinLeft {
            get {
                return ((int)(this["MinLeft"]));
            }
            set {
                this["MinLeft"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("94")]
        public int MaxTop {
            get {
                return ((int)(this["MaxTop"]));
            }
            set {
                this["MaxTop"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Card")]
        public global::Shamanic.DisplayMode OverloadPlayedCounterDisplay {
            get {
                return ((global::Shamanic.DisplayMode)(this["OverloadPlayedCounterDisplay"]));
            }
            set {
                this["OverloadPlayedCounterDisplay"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Horizontal")]
        public global::System.Windows.Controls.Orientation PlayerOrientation {
            get {
                return ((global::System.Windows.Controls.Orientation)(this["PlayerOrientation"]));
            }
            set {
                this["PlayerOrientation"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Horizontal")]
        public global::System.Windows.Controls.Orientation OpponentOrientation {
            get {
                return ((global::System.Windows.Controls.Orientation)(this["OpponentOrientation"]));
            }
            set {
                this["OpponentOrientation"] = value;
            }
        }
    }
}
