//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shamanic.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Shamanic.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Counter Display.
        /// </summary>
        internal static string CounterTitle {
            get {
                return ResourceManager.GetString("CounterTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always.
        /// </summary>
        internal static string DisplayModeAlways {
            get {
                return ResourceManager.GetString("DisplayModeAlways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Card.
        /// </summary>
        internal static string DisplayModeCard {
            get {
                return ResourceManager.GetString("DisplayModeCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Class.
        /// </summary>
        internal static string DisplayModeClass {
            get {
                return ResourceManager.GetString("DisplayModeClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string DisplayModeNever {
            get {
                return ResourceManager.GetString("DisplayModeNever", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shaman.
        /// </summary>
        internal static string DisplayModeShaman {
            get {
                return ResourceManager.GetString("DisplayModeShaman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overload &amp; Totems.
        /// </summary>
        internal static string OpponentDisplay {
            get {
                return ResourceManager.GetString("OpponentDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opponent.
        /// </summary>
        internal static string OpponentTitle {
            get {
                return ResourceManager.GetString("OpponentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always - Display opponent Overload and Totems for all games vs any class.
        ///Shaman -  Display opponent Overload and Totems for all games vs Shaman.
        ///Class -  Display opponent Overload and Totems for all games vs Shaman/Rogue/Priest.
        ///Never - Do not display..
        /// </summary>
        internal static string OpponentTooltip {
            get {
                return ResourceManager.GetString("OpponentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overload.
        /// </summary>
        internal static string OverloadEffectName {
            get {
                return ResourceManager.GetString("OverloadEffectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overload.
        /// </summary>
        internal static string OverloadTitle {
            get {
                return ResourceManager.GetString("OverloadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always - Display Overload for all games playing as any class.
        ///Shaman - Display Overload when playing as Shaman.
        ///Class - Display Overload when playing as Shaman/Rogue/Priest.
        ///Card - Display Overload for &apos;Snowfury Giant&apos;.
        ///Never - Do not display..
        /// </summary>
        internal static string OverloadTooltip {
            get {
                return ResourceManager.GetString("OverloadTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Player.
        /// </summary>
        internal static string PlayerTitle {
            get {
                return ResourceManager.GetString("PlayerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string PluginButtonText {
            get {
                return ResourceManager.GetString("PluginButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays total mana crystals overloaded and totems played for both the player and opponent.
        ///
        ///Mainly for use with the Shaman cards &apos;Thing from Below&apos; and &apos;Snowfury Giant&apos;.
        ///
        ///**WARNING** Disabling the plugin during a game will reset the counters..
        /// </summary>
        internal static string PluginDescription {
            get {
                return ResourceManager.GetString("PluginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shamanic Settings.
        /// </summary>
        internal static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Totems.
        /// </summary>
        internal static string TotemsEffectName {
            get {
                return ResourceManager.GetString("TotemsEffectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Totems.
        /// </summary>
        internal static string TotemsTitle {
            get {
                return ResourceManager.GetString("TotemsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always - Display Totems for all games playing as any class.
        ///Shaman - Display Totems when playing as Shaman.
        ///Class - Display Totems when playing as Shaman/Rogue/Priest.
        ///Card - Display Totems for &apos;Thing from Below&apos;.
        ///Never - Do not display..
        /// </summary>
        internal static string TotemsTooltip {
            get {
                return ResourceManager.GetString("TotemsTooltip", resourceCulture);
            }
        }
    }
}
